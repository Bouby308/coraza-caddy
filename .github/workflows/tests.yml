name: Tests

on:
  push:
    branches: 
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.16.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        lfs: true
        fetch-depth: 0 #for better blame info
    - name: Setup libinjection
      run: |
        TMPDIR=/tmp/libinjection
        git clone https://github.com/libinjection/libinjection $TMPDIR
        gcc -std=c99 -Wall -Werror -fpic -c $TMPDIR/src/libinjection_sqli.c -o $TMPDIR/libinjection_sqli.o 
        gcc -std=c99 -Wall -Werror -fpic -c $TMPDIR/src/libinjection_xss.c -o $TMPDIR/libinjection_xss.o
        gcc -std=c99 -Wall -Werror -fpic -c $TMPDIR/src/libinjection_html5.c -o $TMPDIR/libinjection_html5.o
        gcc -dynamiclib -shared -o $TMPDIR/libinjection.so $TMPDIR/libinjection_sqli.o $TMPDIR/libinjection_xss.o $TMPDIR/libinjection_html5.o
        cp $TMPDIR/*.so /usr/local/lib
        cp $TMPDIR/*.o /usr/local/lib
        cp $TMPDIR/src/*.h /usr/local/include/
        chmod 444 /usr/local/include/libinjection*
        rm -rf /tmp/libinjection
        sudo ldconfig
        # Used to store log files for testing
        mkdir /tmp/audit
    - name: Download vendored dependencies
      run: go mod vendor
    - name: Tests and coverage with CGO
      run: CGO_ENABLED=1 go test -v -coverpkg=./... -coverprofile=coverage-coraza-caddy.out ./...
    # now we also test CGO disabled
    - name: Tests and coverage without CGO
      run: CGO_ENABLED=0 go test -v -coverpkg=./... ./...      
#    - name: SonarCloud Scan
#      uses: sonarsource/sonarcloud-github-action@master
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}      